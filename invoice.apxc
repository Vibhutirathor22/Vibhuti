public with sharing class invoice {
     public static Integer paidInvoices{get;set;}
     public static Integer dueInvoices{get;set;}
     public static List<AggregateResult> totalReceivables{get;set;}
     public static List<Invoice__c> overdueInvoices{get;set;}

     @AuraEnabled(cacheable=true)
       public static List<Invoice__c> fetchInv (id RecId ,String field, String sortOrder)
       {
           system.debug('entered');
            String query;
            query  = 'SELECT Id,Name,Account__r.id,Account__r.Name,owner.name,Amount_Due__c,Amount_Paid__c,Days_Overdue__c,Due_Date__c,Invoice_Date__c,Status__c,Total__c FROM Invoice__c where Account__r.id  = :RecId';
            if(field != null && sortOrder !=null){
                query += ' ORDER BY '+field+' '+sortOrder;
            }
            return Database.query(query);

            
        }

      @AuraEnabled(cacheable=true)
      public static InvoiceWrapper invoiceSummaryInformation(String RecId)
      {
          InvoiceWrapper invWrap = New InvoiceWrapper();
          paidInvoices = [SELECT Count() FROM Invoice__c WHERE Status__c='Paid' AND Account__c =:RecId];
          dueInvoices = [SELECT Count() FROM Invoice__c WHERE Status__c='Due' AND Account__c =:RecId];
          totalReceivables = [SELECT SUM(Amount_Due__c) SUM FROM Invoice__c WHERE Account__c =:RecId];
          Decimal sumAmount;
          sumAmount=Integer.valueOf(totalReceivables[0].get('SUM'));
          invWrap.PaidInvoicesCount = paidInvoices;
          invWrap.dueInvoicesCount = dueInvoices;
          invWrap.totalReceivablesAmount = sumAmount;
          return invWrap;
      }
      @AuraEnabled(cacheable=true)
      public static List<Invoice__c> totalOverdueInvoices(String RecId)
      {
          overdueInvoices = [SELECT Id, Name, Days_Overdue__c, Status__c FROM Invoice__c WHERE Status__c='Overdue' AND Account__c =:RecId];
          
          return overdueInvoices;
      }
      public class InvoiceWrapper
      {
          @AuraEnabled public Integer PaidInvoicesCount{get;set;}
          @AuraEnabled public Integer dueInvoicesCount{get;set;}
          @AuraEnabled public Decimal totalReceivablesAmount{get;set;} 
          
      }



   }
